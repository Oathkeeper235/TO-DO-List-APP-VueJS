{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n\n  const _component_AddList = _resolveComponent(\"AddList\");\n\n  const _component_AppLists = _resolveComponent(\"AppLists\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader, {\n    onClick: $options.beforeDestroy,\n    onToggleAddList: $options.toggleAddList,\n    title: \"TO DO LIST\"\n  }, null, 8\n  /* PROPS */\n  , [\"onClick\", \"onToggleAddList\"]), _withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_AddList, {\n    onAddList: $options.addList\n  }, null, 8\n  /* PROPS */\n  , [\"onAddList\"])], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.showAddList]]), _createVNode(_component_AppLists, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteList: $options.deleteList,\n    lists: $data.lists\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleReminder\", \"onDeleteList\", \"lists\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;uBAAXC,oBAMM,KANN,cAMM,CALJC,aAAwFC,oBAAxF,EAAwF;IAA5EC,OAAK,EAAEC,sBAAqE;IAArDC,eAAe,EAAED,sBAAoC;IAArBE,KAAK,EAAC;EAAe,CAAxF;;EAAA,iCAKI,kBAJJC,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJN,aAA+BO,kBAA/B,EAA+B;IAArBC,SAAQ,EAAEL;EAAW,CAA/B,EAA2B,IAA3B,EAA2B;EAAA;EAA3B,EAA2B,aAA3B,CACI,CAFN;;EAAA,aAAaM,oBAIT,EADJT,aAAuFU,mBAAvF,EAAuF;IAA5EC,gBAAe,EAAER,uBAA2D;IAA1CS,YAAW,EAAET,mBAA6B;IAAhBU,KAAK,EAAEJ;EAAS,CAAvF;;EAAA,gDACI,CANN","names":["class","_createElementBlock","_createVNode","_component_AppHeader","onClick","$options","onToggleAddList","title","_createElementVNode","_component_AddList","onAddList","$data","_component_AppLists","onToggleReminder","onDeleteList","lists"],"sourceRoot":"","sources":["/home/user/Desktop/mirInternship/vue-vezba-2022/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <AppHeader @click=\"beforeDestroy\" @toggle-add-list=\"toggleAddList\" title=\"TO DO LIST\" />\n    <div v-show=\"showAddList\">\n      <AddList @add-list=\"addList\" />\n    </div>\n    <AppLists @toggle-reminder=\"toggleReminder\" @delete-list=\"deleteList\" :lists=\"lists\" />\n  </div>\n</template>\n\n<script>\nimport AppHeader from './components/AppHeader.vue'\nimport AppLists from './components/AppLists.vue'\nimport AddList from './components/AddList.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppLists,\n    AddList\n  },\n\n  data() {\n    return {\n      lists: [],\n      showAddList: false,\n      disabled: false,\n    }\n  },\n\n  methods: {\n    beforeDestroy () {\n      if(this.lists.length > 9) {\n        this.$el.parentNode.removeChild(this.$el);\n      }\n    },\n\n    toggleAddList() {\n      this.showAddList = !this.showAddList\n    },\n\n    addList(list) {\n      this.lists = [...this.lists, list]\n\n      if(this.lists.length > 9) {\n        this.toggleAddList()\n        disabled = true\n      }\n    },\n\n    deleteList(id) {\n      if (confirm('Are you sure?')) {\n        this.lists = this.lists.filter((list) => list.id !== id)\n      }\n    },\n\n    toggleReminder(id) {\n      this.lists = this.lists.map((list) => list.id === id ? { ...list, reminder: !list.reminder } : list)\n    }\n  },\n\n  created() {\n    this.lists = [\n      {\n        id: 1,\n        text: 'List 1',\n        color: 'red',\n        reminder: true,\n      },\n      {\n        id: 2,\n        text: 'List 2',\n        color: 'green',\n        reminder: true,\n      },\n      {\n        id: 3,\n        text: 'List 3',\n        color: 'blue',\n        reminder: false,\n      },\n    ]\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 25px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n\n.btn:focus {\n  outline: none;\n}\n\n.btn:active {\n  transform: scale(0.98);\n}\n\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}