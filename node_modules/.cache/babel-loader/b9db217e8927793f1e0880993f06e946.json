{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppTask = _resolveComponent(\"AppTask\");\n\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.Tasks, Task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: Task.id\n    }, [_createVNode(_component_AppTask, {\n      onToggleReminder: $event => _ctx.$emit('toggle-reminder', Task.id),\n      onDeleteTask: $event => _ctx.$emit('delete-Task', Task.id),\n      Task: Task\n    }, null, 8\n    /* PROPS */\n    , [\"onToggleReminder\", \"onDeleteTask\", \"Task\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;2BACIA,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFcC,YAEd,EAFMC,IAAa,IAAT;yBAAhBJ,oBAEM,KAFN,EAEM;MAFsBK,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFN,GACIC,aAA0HC,kBAA1H,EAA0H;MAAhHC,gBAAe,YAAEC,WAAK,iBAAL,EAAyBN,IAAI,CAACE,EAA9B,CAA+F;MAA3DK,YAAW,YAAED,WAAK,aAAL,EAAqBN,IAAI,CAACE,EAA1B,CAA8C;MAAdF,IAAI,EAAEA;IAAQ,CAA1H;;IAAA,gDADJ;GAEM,CAFN;;EAAA","names":["_createElementBlock","_Fragment","_renderList","$props","Task","key","id","_createVNode","_component_AppTask","onToggleReminder","_ctx","onDeleteTask"],"sourceRoot":"","sources":["/home/user/Desktop/mirInternship/vue-vezba-2022/src/components/AppTasks.vue"],"sourcesContent":["<template>\n    <div v-for=\"Task in Tasks\" :key=\"Task.id\">\n        <AppTask @toggle-reminder=\"$emit('toggle-reminder', Task.id)\" @delete-Task=\"$emit('delete-Task', Task.id)\" :Task=\"Task\" />\n    </div>\n</template>\n\n<script>\n    import AppTask from './AppTask.vue'\n\n    export default {\n        name: 'AppTasks',\n        props: {\n            Tasks: Array,\n        },\n\n        components: {\n            AppTask\n        },\n\n        emits: ['delete-Task', 'toggle-reminder'],\n    }\n</script>"]},"metadata":{},"sourceType":"module"}